buildscript {
	repositories {
		jcenter()
		maven {
			name 'forge'
			url 'http://files.minecraftforge.net/maven'
		}
		maven {
			name = 'sponge'
			url = 'http://repo.spongepowered.org/maven'
		}
	}
	dependencies {
		classpath 'net.minecraftforge.gradle:ForgeGradle:2.1-SNAPSHOT'
		classpath 'org.spongepowered:mixingradle:0.4-SNAPSHOT'
	}
}

ext.revision = 210

apply plugin: 'net.minecraftforge.gradle.tweaker-client'
apply plugin: 'org.spongepowered.mixin'

archivesBaseName = "MineLittlePony"
group = 'com.brohoof.minelp'
version = '1.8.9'

ext.startClass = 'com.mumfrey.liteloader.debug.Start'
minecraft {
	version = "1.8.9"
	mappings = 'stable_20'
	runDir = 'run'
	replace '@VERSION@',project.version
	tweakClass = 'com.mumfrey.liteloader.launch.LiteLoaderTweaker'
}
sourceSets {
	def deps = [
		configurations.forgeGradleMcDeps,
		configurations.forgeGradleMc,
		configurations.compile,
	]
	hdskins {
		compileClasspath += files deps
		refMap = 'mixin.hdskins.refmap.json'
	}
	main {
		refMap = 'mixin.minelp.refmap.json'
		compileClasspath += hdskins.output
	}
	forge {
		compileClasspath += files(deps + [ main.output, api.output ])
	}
}
//project('LiteLoader'){
//	mcMappings = rootProject.minecraft.mappings
//}
processResources {
    def props = [
        version:    version,
        mcversion:  minecraft.version,
        revision:   revision
    ]
    inputs.properties props
	from(sourceSets.main.resources.srcDirs) {
		include 'litemod.json'
		expand props
	}
	from(sourceSets.main.resources.srcDirs) {
		exclude 'litemod.json'
	}
}
repositories{
	maven {
		name 'sponge'
		url 'http://repo.spongepowered.org/maven'
	}
	ivy {
		name 'liteloader jenkins'
		url 'http://jenkins.liteloader.com/job/LiteLoader%20Gradle'
		layout('pattern') {
			artifact '[organization]/artifact/build/libs/[artifact]-[revision](-[classifier]).[ext]'
		}
	}
}

dependencies {
//	compile project('LiteLoader')
//	deobfCompile '1:liteloader:1.8.9-SNAPSHOT'
	compile 'org.spongepowered:mixin:0.5.3-SNAPSHOT'
	compile 'org.ow2.asm:asm-debug-all:5.0.3'
	compile 'net.minecraft:launchwrapper:1.12'
}
jar {
	afterEvaluate {	manifest.attributes.remove 'TweakClass'}
	from sourceSets.findAll { it.name != 'api' }*.output

	extension 'litemod'
	appendix "mc$minecraft.version"
}
mixin {
    defaultObfuscationEnv notch
}
task deploy(type: Copy, dependsOn: build) {
	from jar.archivePath
	into file("$System.env.APPDATA/.minecraft/mods")
}
afterEvaluate {
    minecraft {
        clientRunArgs = [""]
        clientJvmArgs += "-Dmixin.debug.verify=true"
    }
    // hacks for run configs
	// TODO user makeStart configs
    def mc = plugins['net.minecraftforge.gradle.tweaker-client']
    mc.replacer.putReplacement '{RUN_CLIENT_MAIN}', project.startClass
    mc.replacer.putReplacement '{RUN_CLIENT_TWEAKER}', minecraft.tweakClass
}
