buildscript {
	repositories {
		jcenter()
		maven {
			name 'forge'
			url 'http://files.minecraftforge.net/maven'
		}
		maven {
			name 'm2'
			url 'https://plugins.gradle.org/m2'
		}
		maven {
			name = 'sponge'
			url = 'http://repo.spongepowered.org/maven'
		}
	}
	dependencies {
		classpath 'net.minecraftforge.gradle:ForgeGradle:2.2-SNAPSHOT'
		classpath 'org.spongepowered:mixingradle:0.4-SNAPSHOT'
		classpath 'gradle.plugin.mnm.mods.kappa:ap-ide:1.0.5'
	}
}

ext.revision = 221

apply plugin: 'net.minecraftforge.gradle.liteloader'
apply plugin: 'org.spongepowered.mixin'
apply plugin: 'mnm.gradle.ap-ide'

group = 'com.brohoof.minelp'
version = '1.10.2.0'
description = 'Mine Little Pony'

minecraft {
	version = "1.10.2"
	mappings = 'snapshot_20160704' // 'murica! F*** yeah!
	runDir = 'run'
	replace '@VERSION@',project.version
}
sourceSets {
	def deps = [
		configurations.forgeGradleMcDeps,
		configurations.forgeGradleMc,
		configurations.compile,
	]
	hdskins {
		compileClasspath += files deps
		refMap = 'mixin.hdskins.refmap.json'
	}
	main {
		refMap = 'mixin.minelp.refmap.json'
		compileClasspath += hdskins.output
	}
	forge {
		compileClasspath += files(deps + [ main.output, api.output ])
	}
}
litemod.json {
	author = "Verdana, Rene_Z, Mumfrey, JoyJoy"
	description = "Mine Little Pony turns players and mobs into ponies"
	description.litemodminelittlepony = """Mine Little Pony turns players and mobs into ponies
 Press F9 ingame to access settings"""
	description.litemodhdskinsmod = """Seperate skin server for Mine Little Pony that also supports HD skins.
 Access via Skin Manager key binding (default: F1) in the main menu."""
	mixinConfigs += ['mixin.minelp.json', 'mixin.hdskins.json']
}
afterEvaluate {
	dependencies {
		def liteloader = project.plugins['net.minecraftforge.gradle.liteloader']
		def artifact = liteloader.artifact.libraries.collect{it.name}.find{it.contains 'mixin'}
		factory artifact
	}
	processor {
		options.reobfSrgFile = mixin.reobfSrgFile
	}
}
jar {
	from sourceSets.findAll { it.name != 'api' }*.output
	from litemod.outputs
}
mixin {
	defaultObfuscationEnv notch
}
task deploy(type: Copy, dependsOn: build) {
	from jar.archivePath
	into file("$System.env.APPDATA/.minecraft/mods")
}
